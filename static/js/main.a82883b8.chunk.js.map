{"version":3,"sources":["components/Header.js","components/Item.js","components/AddForm.js","components/ListContainer.js","App.js","serviceWorker.js","index.js"],"names":["Header","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","react_default","a","createElement","className","Component","Item","_this","editSave","ev","state","active","setState","savePlayer","props","player","name","nameRef","current","value","position","positionRef","waivePlayer","deletePlayer","id","React","createRef","defaultValue","ref","onClick","defaultProps","AddForm","preventDefault","newName","newPosition","newPlayer","Date","now","addPlayer","alert","placeholder","ListContainer","players","map","item","Item_Item","key","AddForm_AddForm","App","playerId","newPlayers","filter","push","react","Header_Header","ListContainer_ListContainer","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a82883b8.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport './Header.css';\n\nexport default class Header extends Component{\n    constructor(){\n        super()\n    }\n\n    render(){\n        return(\n            <header className=\"app-header\">\n            <h1>Favorite Players</h1>\n            </header>\n        )\n    }\n}","import React, {Component} from 'react';\nimport './Item.css';\nimport PropTypes from 'prop-types'\n\nexport default class Item extends Component{\n    constructor(){\n        super()\n        this.state = {\n            active: false\n        }\n        this.nameRef = React.createRef();\n        this.positionRef = React.createRef();\n    }\n\n    editSave = (ev) => {\n        this.state.active?this.setState({active: false}):this.setState({active: true});\n    }\n\n    savePlayer = () => {\n                this.editSave();\n                this.props.player.name = this.nameRef.current.value;\n                this.props.player.position = this.positionRef.current.value;\n    }\n\n    waivePlayer = () => {\n        this.props.deletePlayer(this.props.player.id);\n    }\n\n    render(){\n        return(\n            <li className=\"item\">\n\n            <div className=\"item-container\">\n            <h1 className={this.state.active?\"hide\":null}>{this.props.player.name}</h1>\n            <p className={this.state.active?\"hide\":null}>{this.props.player.position}</p>\n            <input className={this.state.active?\"input-field\":\"hide\"} defaultValue={this.props.player.name} ref={this.nameRef}></input>\n            <input className={this.state.active?\"input-field\":\"hide\"} defaultValue={this.props.player.position} ref={this.positionRef}></input>\n            </div>\n\n            <div className=\"button-container\">\n            <button onClick={this.editSave} className={this.state.active?\"hide\":\"button button-edit\"}>Edit</button>\n            <button onClick={this.waivePlayer} className={this.state.active?\"hide\":\"button button-delete\"}>Delete</button>\n            <button onClick={this.savePlayer} className={this.state.active?\"button button-save\":\"hide\" }>Save</button>\n            </div>\n\n            </li>\n\n            \n        )\n    }\n}\n\nItem.propTypes = {\n    player: PropTypes.shape({\n        name: PropTypes.string,\n        position: PropTypes.string,\n        id: PropTypes.number.isRequired\n    })\n}\n\nItem.defaultProps = {\n    player: {\n        name: \"Unknown\",\n        position: \"Sixth Man\",\n        id: 0\n    }\n}","import React, {Component} from 'react';\nimport './AddForm.css';\n\n\nexport default class AddForm extends Component{\n    constructor(){\n        super();\n\n        this.newName = React.createRef();\n        this.newPosition = React.createRef();\n    }\n\n    savePlayer = (ev) => {\n        ev.preventDefault();\n        if(this.newName.current.value && this.newPosition.current.value){\n            let newPlayer = {id:Date.now(), name:this.newName.current.value, position:this.newPosition.current.value};\n            this.props.addPlayer(newPlayer);\n            this.newName.current.value = \"\";\n            this.newPosition.current.value = \"\";\n        }else{\n            alert(\"Please fill out the form.\");\n        }\n    }\n\n    render(){\n        return(\n            <form className=\"split addForm\"> \n            <h1>Add New Player</h1>\n                <input className=\"input-field\" placeholder=\"New Name\" ref={this.newName}></input>\n                <input className=\"input-field\" placeholder=\"New Position\" ref={this.newPosition}></input>\n                <button onClick={this.savePlayer} className=\"button button-save\">Save</button>\n            </form>\n\n        )\n    }\n}","import React, {Component} from 'react';\nimport './ListContainer.css';\nimport Item from './Item';\nimport AddForm from './AddForm';\n\n\nexport default class ListContainer extends Component{\n    constructor(){\n        super()\n        // this.state = {players: [\n        //     {id: 1, name: \"Guo Ailun\", position: \"Point Guard\"},\n        //     {id: 2, name: \"Yi Jianlian\", position: \"Power Foward\"},\n        //     {id: 3, name: \"Yao Ming\", position: \"Center\"}\n        // ]}\n    }\n\n    // deletePlayer = (playerId) => {\n    //     let newPlayers = this.state.players.filter((item) => {\n    //         if(playerId != item.id){\n    //             return true;\n    //         }\n    //     });\n    //     this.setState({players: newPlayers});\n    // }\n\n    // addPlayer = (newPlayer) => {\n    //     let newPlayers = this.state.players;\n    //     newPlayers.push(newPlayer);\n    //     this.setState({players: newPlayers});\n    // }\n\n    render(){\n        return(\n            <ul className=\"split list-container\">\n            {this.props.players.map((item) => (\n            <Item key={item.id} player={item} deletePlayer={this.props.deletePlayer}/>\n            ))}\n            <AddForm addPlayer={this.props.addPlayer}/>\n            </ul>\n        )\n    }\n}","import React, { Component, Fragment } from 'react';\nimport Header from './components/Header';\nimport ListContainer from './components/ListContainer';\n\nclass App extends Component {\n  constructor(){\n    super()\n    this.state = {players: [\n        {id: 1, name: \"Guo Ailun\", position: \"Point Guard\"},\n        {id: 2, name: \"Yi Jianlian\", position: \"Power Foward\"},\n        {id: 3, name: \"Yao Ming\", position: \"Center\"}\n    ]}\n}\n\ndeletePlayer = (playerId) => {\n  let newPlayers = this.state.players.filter((item) => {\n      if(playerId != item.id){\n          return true;\n      }\n  });\n  this.setState({players: newPlayers});\n}\n\naddPlayer = (newPlayer) => {\n  let newPlayers = this.state.players;\n  newPlayers.push(newPlayer);\n  this.setState({players: newPlayers});\n}\n\n\n  render() {\n    return (\n        <Fragment>\n          <Header />\n          <ListContainer players={this.state.players} addPlayer={this.addPlayer} deletePlayer={this.deletePlayer}/>\n        </Fragment>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}